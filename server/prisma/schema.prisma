generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

enum AuthMethod {
  EMAIL
  GOOGLE
  GITHUB
}

model User {
  id                String     @id @default(uuid())
  createdAt         DateTime   @default(now())
  authMethod        AuthMethod
  email             String     @unique
  passwordHash      String?
  providerAccountId String?

  cards Card[] @relation()

  @@unique([authMethod, providerAccountId])
}

model Card {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  title       String
  slug        String   @unique
  blockOrders String[] @default([])

  userId    String
  user      User       @relation(fields: [userId], references: [id])
  Theme     Theme?
  Assistant Assistant?
  Blocks    Block[]
  Documents Document[]
}

model Theme {
  createdAt DateTime @default(now())
  config    Json

  cardId String @id
  card   Card   @relation(fields: [cardId], references: [id], onDelete: Cascade)
}

model Block {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  type      String
  config    Json

  cardId String
  card   Card   @relation(fields: [cardId], references: [id], onDelete: Cascade)

  @@index([cardId])
}

model Assistant {
  createdAt DateTime @default(now())
  config    Json

  cardId String @id
  card   Card   @relation(fields: [cardId], references: [id], onDelete: Cascade)
}

model Document {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  fileName  String
  filePath  String

  cardId     String
  card       Card        @relation(fields: [cardId], references: [id], onDelete: Cascade)
  embeddings Embedding[]
}

model Embedding {
  id        String                      @id @default(uuid())
  createdAt DateTime                    @default(now())
  vector    Unsupported("vector(3072)")
  textChunk String

  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
}
